// <auto-generated />
using System;
using Coflnet.Payments.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Payments.Migrations
{
    [DbContext(typeof(PaymentContext))]
    [Migration("20230205175924_paymentRequests")]
    partial class paymentRequests
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Coflnet.Payments.Models.FiniteTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("FiniteTransactions");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.OwnerShip", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("OwnerShip");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.PaymentRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CreateOnIp")
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceFingerprint")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Locale")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("ProductIdId")
                        .HasColumnType("int");

                    b.Property<string>("Provider")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("SessionId")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateOnIp");

                    b.HasIndex("DeviceFingerprint");

                    b.HasIndex("ProductIdId");

                    b.HasIndex("UserId");

                    b.HasIndex("CreatedAt", "SessionId");

                    b.ToTable("PaymentRequests");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.PlanedTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("PlanedTransactions");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("OwnershipSeconds")
                        .HasColumnType("bigint");

                    b.Property<string>("Slug")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Title")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Flags")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int?>("RequiresId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TargetsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequiresId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.HasIndex("TargetsId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Ip")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Locale")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("Ip");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GroupProduct", b =>
                {
                    b.Property<int>("GroupsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("GroupsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("GroupProduct");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.PurchaseableProduct", b =>
                {
                    b.HasBaseType("Coflnet.Payments.Models.Product");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("PurchaseableProduct");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.TopUpProduct", b =>
                {
                    b.HasBaseType("Coflnet.Payments.Models.Product");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProviderSlug")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasIndex("Slug", "ProviderSlug")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("TopUpProduct");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.FiniteTransaction", b =>
                {
                    b.HasOne("Coflnet.Payments.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Coflnet.Payments.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.OwnerShip", b =>
                {
                    b.HasOne("Coflnet.Payments.Models.PurchaseableProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Coflnet.Payments.Models.User", "User")
                        .WithMany("Owns")
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.PaymentRequest", b =>
                {
                    b.HasOne("Coflnet.Payments.Models.TopUpProduct", "ProductId")
                        .WithMany()
                        .HasForeignKey("ProductIdId");

                    b.HasOne("Coflnet.Payments.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ProductId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.PlanedTransaction", b =>
                {
                    b.HasOne("Coflnet.Payments.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Coflnet.Payments.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Coflnet.Payments.Models.Rule", b =>
                {
                    b.HasOne("Coflnet.Payments.Models.Group", "Requires")
                        .WithMany()
                        .HasForeignKey("RequiresId");

                    b.HasOne("Coflnet.Payments.Models.Group", "Targets")
                        .WithMany()
                        .HasForeignKey("TargetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requires");

                    b.Navigation("Targets");
                });

            modelBuilder.Entity("GroupProduct", b =>
                {
                    b.HasOne("Coflnet.Payments.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coflnet.Payments.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Coflnet.Payments.Models.User", b =>
                {
                    b.Navigation("Owns");
                });
#pragma warning restore 612, 618
        }
    }
}
